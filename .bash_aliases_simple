########################################################################
#  Aliases
########################################################################
alias rm='		rm -i'
# Shortcuts
alias sr='              echo screen -r; screen -r'
alias ex='              echo exit; exit'
alias ut='              echo uptime; uptime'
alias lu='              echo cd lucky7; cd $HOME/projects/python_projects/calculateLengthOfNight/'
alias ar='              echo cd arduino; cd $HOME/projects/arduino-mock-master/'
# list commands
lsopt=" -aFh"
export COLOR_OPT='--color=auto'
alias l='	ls $lsopt -C  $COLOR_OPT'
alias lf='	ls $lsopt -C  $COLOR_OPT'
alias ls='  ls $lsopt     $COLOR_OPT'
alias ll='  ls $lsopt -l  $COLOR_OPT'
alias lt='  ls $lsopt -tr  $COLOR_OPT'
alias llt=' ls $lsopt -ltr $COLOR_OPT'
alias ltl=' ls $lsopt -ltr $COLOR_OPT'
alias lt_nr='  ls $lsopt -t  $COLOR_OPT' # _nr = no r
alias llt_nr=' ls $lsopt -lt $COLOR_OPT'
alias ltl_nr=' ls $lsopt -lt $COLOR_OPT'
alias pretty=' 		pretty +enddo -uc P -cap G -lc KVDCF -is 2 -ci 2 -xs 100 -cnc "&" '
alias rs='              set noglob; eval `resize`; unset noglob'
alias up='		cd ..'
alias c='               pyCalc'
alias vncserver_start_1='vncserver :1 -randr=1280x1024'
alias vncserver_start_2='vncserver :2 -randr=1280x1024'
alias vncserver_kill_1='vncserver -kill :1'
alias vncserver_kill_2='vncserver -kill :2'

if [ "x$PS_FLAGS" = x ]; then
  export PS_FLAGS="-ef"
fi
if [ "x$PS_CMD" = x ]; then
  export PS_CMD=ps
fi

psg () {
    if [ "x$PS_CMD" = x ]; then
      PS_CMD=ps
    fi
    if [ $# -le 0 ]; then
      $PS_CMD $PS_FLAGS | egrep $USER | egrep -iv " egrep $USER"
    else
      $PS_CMD $PS_FLAGS | egrep -i "$*" | egrep -iv " egrep -i $*"
    fi
}
psgdo() {
  if [ "x$PS_CMD" = x ]; then
    PS_CMD=ps
  fi
  local command
  local do_sudo
  do_sudo=""
  do_sudo_msg=""
  if [ "$1" == "-s"  ]; then
    shift
    do_sudo=sudo
    do_sudo_msg="*using sudo*"
  fi
  command=$1
  shift
  STRING=`$PS_CMD $PS_FLAGS | egrep -i "$*" | egrep -iv " egrep -i $*"`
  PID=`echo "$STRING" | awk '{print $2}' `
  if [ "${PID}" == "" ]; then
    echo No matching process found
  else
    echo "$STRING"
    echo Execute command $command $do_sudo_msg on: $PID
    echo -n "Y or N? "
    read ans
    if [ "$ans" = "Y" -o "$ans" = "y" -o "$ans" = "Yes" -o "$ans" = "yes" ]; then
      $do_sudo $command $PID
    fi
  fi
}
psgkill() {
  local sudo_flag
  sudo_flag=""
  if [ "$1" == "-s"  ]; then
    sudo_flag="-s"
    shift
  fi
  psgdo $sudo_flag "kill -9" "$@"
}
psm () {
    if [ "x$PS_CMD" = x ]; then
      PS_CMD=ps
    fi
    $PS_CMD $PS_FLAGS | more
}
alias up='		cd ..'
alias u='		cd ..'
alias home='		cd'
#alias back='		cd -' 
# From SunExpert Article Jan. 1996
dir_list_helper () {
  awk '{
         for (i=1; i<=NF; i++)
           printf(" d%d  %s\n", i, $i)
       }'
}
d0 () {
  dirs | dir_list_helper
}
sd () {
  dirs | dir_list_helper
  echo -n 'Directory? '
  read ans
  if [ "x$ans" = x ]; then  return;  fi
  ans=`expr $ans - 1`
  if [ $ans -lt 1 ]; then return; fi
  pushd +$ans
}
pd () {
  eval `pds $* ` > /dev/null; d0
}
sw () {
  pushd
}
for i in 2 3 4 5 6 7 8 9; do
  j=`expr $i - 1`
  alias d$i=" pd +$j"
done
unset i j
pds () {
  # helper script for pd alias
  case $# in
    0) echo popd     ;;
    *) echo pushd "$*" ;;
  esac
}

#Working directory in Xterm title bar stuff
cd() {
  OLDPWD6="$OLDPWD5"
  OLDPWD5="$OLDPWD4"
  OLDPWD4="$OLDPWD3"
  OLDPWD3="$OLDPWD2"
  OLDPWD2="$OLDPWD"
  if [ "x$*" = x ]; then
    builtin cd 
  else
    builtin cd "$*"
  fi
  APWD=`$PWD_CMMD`
  CWD=`echo $APWD | sed -e "s;^$HOME_DIR;~;" \
                        -e 's;^~/[^/][^/]*/..*/\(..*/\);\.\.\./\1;' \
                        -e 's;^/[^/][^/]*/..*/\(..*/\);\.\.\./\1;'`
  SHORT_CWD=`echo $APWD | sed -e 's;^..*/;.../;'`
  pwd
}

#alias backs='echo 1: $OLDPWD; echo 2: $OLDPWD2; echo 3: $OLDPWD3; echo 4: $OLDPWD4; echo 5: $OLDPWD5; echo 6: $OLDPWD6'
alias backs='echo 1: $OLDPWD \(1\); echo 2: $OLDPWD2 \(2\); echo 3: $OLDPWD3 \(3\); echo 4: $OLDPWD4 \(4\); echo 5: $OLDPWD5 \(5\); echo 6: $OLDPWD6 \(6\)'

back() {
    case $1 in
      2) cd "$OLDPWD2"  ;;
      3) cd "$OLDPWD3"  ;;
      4) cd "$OLDPWD4"  ;;
      5) cd "$OLDPWD5"  ;;
      6) cd "$OLDPWD6"  ;;
      *) cd "$OLDPWD"    ;;
    esac
}

goback() {
    local backno
    backs
    echo -n "Back to: "
    read backno
    if [ -n "$backno" ]; then
      back ${backno}
    fi
}

pushd() {
  if [ "x$*" = x ]; then
    builtin pushd 
  else
    builtin pushd "$*"
  fi
  APWD=`$PWD_CMMD`
  CWD=`echo $APWD | sed -e "s;^$HOME_DIR;~;" \
                        -e 's;^~/[^/][^/]*/..*/\(..*/\);\.\.\./\1;' \
                        -e 's;^/[^/][^/]*/..*/\(..*/\);\.\.\./\1;'`
  SHORT_CWD=`echo $APWD | sed -e 's;^..*/;.../;'`
}
popd() {
  builtin popd
  APWD=`$PWD_CMMD`
  CWD=`echo $APWD | sed -e "s;^$HOME_DIR;~;" \
                        -e 's;^~/[^/][^/]*/..*/\(..*/\);\.\.\./\1;' \
                        -e 's;^/[^/][^/]*/..*/\(..*/\);\.\.\./\1;'`
  SHORT_CWD=`echo $APWD | sed -e 's;^..*/;.../;'`
}
